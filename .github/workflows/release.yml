name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}-${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: darwin
            arch: amd64
            runner: macos-13  # Intel Mac
            goos: darwin
            goarch: amd64
            npm_os: darwin
            npm_arch: x64
          - os: darwin
            arch: arm64
            runner: macos-latest  # Apple Silicon Mac
            goos: darwin
            goarch: arm64
            npm_os: darwin
            npm_arch: arm64
          - os: linux
            arch: amd64
            runner: ubuntu-latest
            goos: linux
            goarch: amd64
            npm_os: linux
            npm_arch: x64
          # Linux ARM64 requires cross-compilation setup or ARM runner
          # Commenting out for now
          # - os: linux
          #   arch: arm64
          #   runner: ubuntu-latest
          #   goos: linux
          #   goarch: arm64
          #   npm_os: linux
          #   npm_arch: arm64
          - os: windows
            arch: amd64
            runner: windows-latest
            goos: windows
            goarch: amd64
            npm_os: windows
            npm_arch: x64
          # Windows ARM64 requires cross-compilation setup
          # Commenting out for now
          # - os: windows
          #   arch: arm64
          #   runner: windows-latest
          #   goos: windows
          #   goarch: arm64
          #   npm_os: win32
          #   npm_arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build binary
        run: |
          go build -o tree-sorter-ts${{ matrix.os == 'windows' && '.exe' || '' }} ./cmd/tree-sorter-ts
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}

      - name: Create npm package
        run: |
          # Create package directory
          mkdir -p npm-package
          
          # Copy binary
          cp tree-sorter-ts${{ matrix.os == 'windows' && '.exe' || '' }} npm-package/
          
          # Generate package.json from template
          sed -e "s/{{OS}}/${{ matrix.os }}/g" \
              -e "s/{{ARCH}}/${{ matrix.arch }}/g" \
              -e "s/{{NPM_OS}}/${{ matrix.npm_os }}/g" \
              -e "s/{{NPM_ARCH}}/${{ matrix.npm_arch }}/g" \
              -e "s/{{VERSION}}/${{ steps.version.outputs.VERSION }}/g" \
              -e "s/{{EXT}}/${{ matrix.os == 'windows' && '.exe' || '' }}/g" \
              npm/package.json.tmpl > npm-package/package.json
        shell: bash

      - name: Publish npm package
        run: |
          cd npm-package
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create archive for GitHub release
        run: |
          tar -czf tree-sorter-ts_${{ matrix.os }}_${{ matrix.arch }}.tar.gz tree-sorter-ts${{ matrix.os == 'windows' && '.exe' || '' }}
        if: matrix.os != 'windows'

      - name: Create archive for GitHub release (Windows)
        run: |
          tar -czf tree-sorter-ts_${{ matrix.os }}_${{ matrix.arch }}.tar.gz tree-sorter-ts.exe
        if: matrix.os == 'windows'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tree-sorter-ts_${{ matrix.os }}_${{ matrix.arch }}
          path: tree-sorter-ts_${{ matrix.os }}_${{ matrix.arch }}.tar.gz

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          files: artifacts/**/tree-sorter-ts_*.tar.gz
          generate_release_notes: true

  publish-npm:
    name: Publish Main Package to NPM
    needs: [build, release]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json with version and optionalDependencies
        run: |
          # Update version and add optionalDependencies for all platform packages
          node -e "
          const fs = require('fs');
          const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
          const version = '${{ steps.version.outputs.VERSION }}';
          
          pkg.version = version;
          pkg.optionalDependencies = {
            'tree-sorter-ts-darwin-x64': version,
            'tree-sorter-ts-darwin-arm64': version,
            'tree-sorter-ts-linux-x64': version,
            'tree-sorter-ts-windows-x64': version
          };
          
          fs.writeFileSync('package.json', JSON.stringify(pkg, null, 2) + '\\n');
          "

      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
